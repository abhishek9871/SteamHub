{"ast":null,"code":"/**\n * GoDrivePlayer API service for streaming embeds\n * Based on deep research response (2025-09-23)\n * Primarily uses IMDB IDs, supports movies and TV shows\n */\nconst BASE_URL = 'https://godriveplayer.com';\nexport const godrivePlayerApi = {\n  // Get movie embed URL\n  getMovieStreamFromDomain: (imdbId, domain = 'godriveplayer.com') => {\n    if (!imdbId.startsWith('tt')) imdbId = `tt${imdbId}`;\n    const baseUrl = `https://${domain}/player.php?imdb=${imdbId}`;\n    return baseUrl;\n  },\n  // Get TV episode embed URL (inferred from response)\n  getTvStreamFromDomain: (imdbId, season, episode, domain = 'godriveplayer.com') => {\n    if (!imdbId.startsWith('tt')) imdbId = `tt${imdbId}`;\n    const baseUrl = `https://${domain}/player.php?imdb=${imdbId}&s=${season}&e=${episode}`;\n    return baseUrl;\n  },\n  // No formal API; direct embed only\n  getEmbedFromApi: async (imdbId, season = null, episode = null) => {\n    // Fallback to direct embed since no API is mentioned\n    return season && episode ? godrivePlayerApi.getTvStreamFromDomain(imdbId, season, episode) : godrivePlayerApi.getMovieStreamFromDomain(imdbId);\n  },\n  // List of domains for rotation\n  domains: ['godriveplayer.com'] // Limited to main domain\n};","map":{"version":3,"names":["BASE_URL","godrivePlayerApi","getMovieStreamFromDomain","imdbId","domain","startsWith","baseUrl","getTvStreamFromDomain","season","episode","getEmbedFromApi","domains"],"sources":["C:/Users/VASU/Desktop/task/src/services/godrivePlayerApi.js"],"sourcesContent":["/**\n * GoDrivePlayer API service for streaming embeds\n * Based on deep research response (2025-09-23)\n * Primarily uses IMDB IDs, supports movies and TV shows\n */\nconst BASE_URL = 'https://godriveplayer.com';\n\nexport const godrivePlayerApi = {\n  // Get movie embed URL\n  getMovieStreamFromDomain: (imdbId, domain = 'godriveplayer.com') => {\n    if (!imdbId.startsWith('tt')) imdbId = `tt${imdbId}`;\n    const baseUrl = `https://${domain}/player.php?imdb=${imdbId}`;\n    return baseUrl;\n  },\n\n  // Get TV episode embed URL (inferred from response)\n  getTvStreamFromDomain: (imdbId, season, episode, domain = 'godriveplayer.com') => {\n    if (!imdbId.startsWith('tt')) imdbId = `tt${imdbId}`;\n    const baseUrl = `https://${domain}/player.php?imdb=${imdbId}&s=${season}&e=${episode}`;\n    return baseUrl;\n  },\n\n  // No formal API; direct embed only\n  getEmbedFromApi: async (imdbId, season = null, episode = null) => {\n    // Fallback to direct embed since no API is mentioned\n    return season && episode\n      ? godrivePlayerApi.getTvStreamFromDomain(imdbId, season, episode)\n      : godrivePlayerApi.getMovieStreamFromDomain(imdbId);\n  },\n\n  // List of domains for rotation\n  domains: ['godriveplayer.com'], // Limited to main domain\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,gBAAgB,GAAG;EAC9B;EACAC,wBAAwB,EAAEA,CAACC,MAAM,EAAEC,MAAM,GAAG,mBAAmB,KAAK;IAClE,IAAI,CAACD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC,EAAEF,MAAM,GAAG,KAAKA,MAAM,EAAE;IACpD,MAAMG,OAAO,GAAG,WAAWF,MAAM,oBAAoBD,MAAM,EAAE;IAC7D,OAAOG,OAAO;EAChB,CAAC;EAED;EACAC,qBAAqB,EAAEA,CAACJ,MAAM,EAAEK,MAAM,EAAEC,OAAO,EAAEL,MAAM,GAAG,mBAAmB,KAAK;IAChF,IAAI,CAACD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC,EAAEF,MAAM,GAAG,KAAKA,MAAM,EAAE;IACpD,MAAMG,OAAO,GAAG,WAAWF,MAAM,oBAAoBD,MAAM,MAAMK,MAAM,MAAMC,OAAO,EAAE;IACtF,OAAOH,OAAO;EAChB,CAAC;EAED;EACAI,eAAe,EAAE,MAAAA,CAAOP,MAAM,EAAEK,MAAM,GAAG,IAAI,EAAEC,OAAO,GAAG,IAAI,KAAK;IAChE;IACA,OAAOD,MAAM,IAAIC,OAAO,GACpBR,gBAAgB,CAACM,qBAAqB,CAACJ,MAAM,EAAEK,MAAM,EAAEC,OAAO,CAAC,GAC/DR,gBAAgB,CAACC,wBAAwB,CAACC,MAAM,CAAC;EACvD,CAAC;EAED;EACAQ,OAAO,EAAE,CAAC,mBAAmB,CAAC,CAAE;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}