{"ast":null,"code":"/**\n * Embed.su API service for streaming embeds\n * Based on deep research response (2025-09-23)\n * Supports TMDB/IMDB IDs, movies, and TV shows\n */\nconst BASE_URL = 'https://multiembed.mov';\nexport const embedSuApi = {\n  // Get movie embed URL\n  getMovieStreamFromDomain: (tmdbId, imdbId, domain = 'multiembed.mov') => {\n    const id = tmdbId || imdbId;\n    const tmdbParam = tmdbId ? '&tmdb=1' : '';\n    const baseUrl = `https://${domain}/?video_id=${id}${tmdbParam}`;\n    const params = new URLSearchParams({\n      check: '1' // For VIP player\n    });\n    return `${baseUrl}&${params.toString()}`;\n  },\n  // Get TV episode embed URL\n  getTvStreamFromDomain: (tmdbId, imdbId, season, episode, domain = 'multiembed.mov') => {\n    const id = tmdbId || imdbId;\n    const tmdbParam = tmdbId ? '&tmdb=1' : '';\n    const baseUrl = `https://${domain}/?video_id=${id}&s=${season}&e=${episode}${tmdbParam}`;\n    const params = new URLSearchParams({\n      check: '1'\n    });\n    return `${baseUrl}&${params.toString()}`;\n  },\n  // No formal API; direct embed only\n  getEmbedFromApi: async (tmdbId, imdbId, season = null, episode = null) => {\n    return season && episode ? embedSuApi.getTvStreamFromDomain(tmdbId, imdbId, season, episode) : embedSuApi.getMovieStreamFromDomain(tmdbId, imdbId);\n  },\n  // List of domains for rotation\n  domains: ['multiembed.mov', 'embed.su'] // Main and alternative\n};","map":{"version":3,"names":["BASE_URL","embedSuApi","getMovieStreamFromDomain","tmdbId","imdbId","domain","id","tmdbParam","baseUrl","params","URLSearchParams","check","toString","getTvStreamFromDomain","season","episode","getEmbedFromApi","domains"],"sources":["C:/Users/VASU/Desktop/task/src/services/embedSuApi.js"],"sourcesContent":["/**\n * Embed.su API service for streaming embeds\n * Based on deep research response (2025-09-23)\n * Supports TMDB/IMDB IDs, movies, and TV shows\n */\nconst BASE_URL = 'https://multiembed.mov';\n\nexport const embedSuApi = {\n  // Get movie embed URL\n  getMovieStreamFromDomain: (tmdbId, imdbId, domain = 'multiembed.mov') => {\n    const id = tmdbId || imdbId;\n    const tmdbParam = tmdbId ? '&tmdb=1' : '';\n    const baseUrl = `https://${domain}/?video_id=${id}${tmdbParam}`;\n    const params = new URLSearchParams({\n      check: '1', // For VIP player\n    });\n    return `${baseUrl}&${params.toString()}`;\n  },\n\n  // Get TV episode embed URL\n  getTvStreamFromDomain: (tmdbId, imdbId, season, episode, domain = 'multiembed.mov') => {\n    const id = tmdbId || imdbId;\n    const tmdbParam = tmdbId ? '&tmdb=1' : '';\n    const baseUrl = `https://${domain}/?video_id=${id}&s=${season}&e=${episode}${tmdbParam}`;\n    const params = new URLSearchParams({\n      check: '1',\n    });\n    return `${baseUrl}&${params.toString()}`;\n  },\n\n  // No formal API; direct embed only\n  getEmbedFromApi: async (tmdbId, imdbId, season = null, episode = null) => {\n    return season && episode\n      ? embedSuApi.getTvStreamFromDomain(tmdbId, imdbId, season, episode)\n      : embedSuApi.getMovieStreamFromDomain(tmdbId, imdbId);\n  },\n\n  // List of domains for rotation\n  domains: ['multiembed.mov', 'embed.su'], // Main and alternative\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,wBAAwB;AAEzC,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,wBAAwB,EAAEA,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,GAAG,gBAAgB,KAAK;IACvE,MAAMC,EAAE,GAAGH,MAAM,IAAIC,MAAM;IAC3B,MAAMG,SAAS,GAAGJ,MAAM,GAAG,SAAS,GAAG,EAAE;IACzC,MAAMK,OAAO,GAAG,WAAWH,MAAM,cAAcC,EAAE,GAAGC,SAAS,EAAE;IAC/D,MAAME,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCC,KAAK,EAAE,GAAG,CAAE;IACd,CAAC,CAAC;IACF,OAAO,GAAGH,OAAO,IAAIC,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;EAC1C,CAAC;EAED;EACAC,qBAAqB,EAAEA,CAACV,MAAM,EAAEC,MAAM,EAAEU,MAAM,EAAEC,OAAO,EAAEV,MAAM,GAAG,gBAAgB,KAAK;IACrF,MAAMC,EAAE,GAAGH,MAAM,IAAIC,MAAM;IAC3B,MAAMG,SAAS,GAAGJ,MAAM,GAAG,SAAS,GAAG,EAAE;IACzC,MAAMK,OAAO,GAAG,WAAWH,MAAM,cAAcC,EAAE,MAAMQ,MAAM,MAAMC,OAAO,GAAGR,SAAS,EAAE;IACxF,MAAME,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCC,KAAK,EAAE;IACT,CAAC,CAAC;IACF,OAAO,GAAGH,OAAO,IAAIC,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;EAC1C,CAAC;EAED;EACAI,eAAe,EAAE,MAAAA,CAAOb,MAAM,EAAEC,MAAM,EAAEU,MAAM,GAAG,IAAI,EAAEC,OAAO,GAAG,IAAI,KAAK;IACxE,OAAOD,MAAM,IAAIC,OAAO,GACpBd,UAAU,CAACY,qBAAqB,CAACV,MAAM,EAAEC,MAAM,EAAEU,MAAM,EAAEC,OAAO,CAAC,GACjEd,UAAU,CAACC,wBAAwB,CAACC,MAAM,EAAEC,MAAM,CAAC;EACzD,CAAC;EAED;EACAa,OAAO,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAE;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}