{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASU\\\\Desktop\\\\task\\\\src\\\\components\\\\Player\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { FiArrowLeft, FiPlay, FiPause, FiVolume2, FiVolumeX, FiMaximize, FiSettings, FiRotateCcw, FiAlertTriangle, FiCheckCircle, FiLoader, FiExternalLink } from 'react-icons/fi';\nimport ReactPlayer from 'react-player';\nimport { Parser as M3U8Parser } from 'm3u8-parser';\nimport { moviesApi, tvApi } from '../../services/tmdbApi';\nimport { vidsrcCcApi } from '../../services/vidsrcCcApi';\nimport { godrivePlayerApi } from '../../services/godrivePlayerApi';\nimport { embedSuApi } from '../../services/embedSuApi';\nimport { useSettings } from '../../context/SettingsContext';\nimport { getImageUrl } from '../../services/tmdbApi';\nimport './Player.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const {\n    type,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    settings\n  } = useSettings();\n  const iframeRef = useRef(null);\n  const playerRef = useRef(null);\n  const controlsTimeoutRef = useRef(null);\n\n  // Enhanced state management\n  const [content, setContent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingPhase, setLoadingPhase] = useState('initializing');\n  const [error, setError] = useState(null);\n  const [streamData, setStreamData] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [showControls, setShowControls] = useState(true);\n  const [quality, setQuality] = useState('auto');\n  const [m3u8Url, setM3u8Url] = useState(null);\n  const [qualityVariants, setQualityVariants] = useState([]);\n  const [selectedQuality, setSelectedQuality] = useState('auto');\n  const [showQualitySelector, setShowQualitySelector] = useState(false);\n  const [showSourceSelector, setShowSourceSelector] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n  const [iframeLoaded, setIframeLoaded] = useState(false);\n  const [iframeError, setIframeError] = useState(false);\n  const [videoReady, setVideoReady] = useState(false);\n  const [videoError, setVideoError] = useState(null);\n  const [retryAttempts, setRetryAttempts] = useState(0);\n  const [isRetrying, setIsRetrying] = useState(false);\n  const sources = useMemo(() => {\n    const vidsrcCc = vidsrcCcApi.domains.map(d => ({\n      provider: 'vidsrcCc',\n      domain: d\n    }));\n    const godrivePlayer = godrivePlayerApi.domains.map(d => ({\n      provider: 'godrivePlayer',\n      domain: d\n    }));\n    const embedSu = embedSuApi.domains.map(d => ({\n      provider: 'embedSu',\n      domain: d\n    }));\n    return [...vidsrcCc, ...godrivePlayer, ...embedSu];\n  }, []);\n  const [sourceIndex, setSourceIndex] = useState(0);\n  const rotationAttemptsRef = useRef(0);\n  const didUserInteractRef = useRef(false);\n  const autoRotateTimerRef = useRef(null);\n\n  // Load preferred source from previous sessions\n  useEffect(() => {\n    try {\n      const prefProvider = localStorage.getItem('preferredSourceProvider');\n      const prefHost = localStorage.getItem('preferredSourceHost');\n      if (prefHost) {\n        const idx = sources.findIndex(s => {\n          try {\n            return new URL(s.domain).host === prefHost && (!prefProvider || s.provider === prefProvider);\n          } catch {\n            return false;\n          }\n        });\n        if (idx >= 0) setSourceIndex(idx);\n      }\n    } catch {}\n  }, [sources]);\n  useEffect(() => {\n    loadContent();\n    detectMobileDevice();\n    return () => {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    };\n  }, [type, id]);\n  useEffect(() => {\n    if (content) {\n      loadStream();\n    }\n  }, [content]);\n\n  // Heuristic: auto-rotate only if the initial source appears unavailable (not ready or errored)\n  useEffect(() => {\n    if (!streamData) return;\n    if (videoReady && !videoError) return; // do not rotate when things look fine\n    if (autoRotateTimerRef.current) {\n      clearTimeout(autoRotateTimerRef.current);\n    }\n    const t = setTimeout(() => {\n      if (!didUserInteractRef.current) {\n        rotationAttemptsRef.current += 1;\n        if (rotationAttemptsRef.current <= sources.length - 1) {\n          const nextIdx = (sourceIndex + 1) % sources.length;\n          setSourceIndex(nextIdx);\n          setTimeout(() => loadStream(sources[nextIdx]), 0);\n        }\n      }\n    }, 5000);\n    autoRotateTimerRef.current = t;\n    return () => {\n      if (autoRotateTimerRef.current) {\n        clearTimeout(autoRotateTimerRef.current);\n        autoRotateTimerRef.current = null;\n      }\n    };\n  }, [streamData, sourceIndex, sources]);\n\n  // Detect mobile device\n  const detectMobileDevice = () => {\n    const mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;\n    setIsMobile(mobile);\n  };\n  const parseM3u8Variants = async m3u8Url => {\n    try {\n      const response = await fetch(m3u8Url);\n      const manifest = await response.text();\n      const parser = new M3U8Parser();\n      parser.push(manifest);\n      parser.end();\n      const parsedManifest = parser.manifest;\n      const variants = parsedManifest.playlists.map(playlist => ({\n        name: `${playlist.attributes.RESOLUTION.width}x${playlist.attributes.RESOLUTION.height}`,\n        url: playlist.uri,\n        resolution: playlist.attributes.RESOLUTION,\n        bandwidth: playlist.attributes.BANDWIDTH\n      })).sort((a, b) => b.bandwidth - a.bandwidth);\n      console.log('Parsed M3U8 variants:', variants);\n      return variants;\n    } catch (error) {\n      console.error('Error parsing M3U8:', error);\n      return [];\n    }\n  };\n  const loadStream = async overrideSource => {\n    try {\n      setLoadingPhase('loading_stream');\n      setError(null);\n      let stream;\n      const source = overrideSource || sources[sourceIndex];\n      const domain = source.domain;\n\n      // Fetch IMDB/TMDB IDs if needed\n      let tmdbId = id;\n      let imdbId = null;\n      if (type === 'movie') {\n        const ids = await moviesApi.getExternalIds(id);\n        imdbId = (ids === null || ids === void 0 ? void 0 : ids.imdb_id) || null;\n      } else {\n        const ids = await tvApi.getExternalIds(id);\n        imdbId = (ids === null || ids === void 0 ? void 0 : ids.imdb_id) || null;\n      }\n\n      // Fetch M3U8 URL for quality selection\n      let m3u8 = null;\n      if (source.provider === 'vidsrcCc') {\n        m3u8 = await vidsrcCcApi.getM3u8Url(imdbId, type === 'tv' ? 1 : null, type === 'tv' ? 1 : null);\n      } else if (source.provider === 'godrivePlayer') {\n        m3u8 = await godrivePlayerApi.getM3u8Url(imdbId, type === 'tv' ? 1 : null, type === 'tv' ? 1 : null);\n      } else {\n        m3u8 = await embedSuApi.getM3u8Url(tmdbId, imdbId, type === 'tv' ? 1 : null, type === 'tv' ? 1 : null);\n      }\n      if (m3u8) {\n        setM3u8Url(m3u8);\n        setLoadingPhase('preparing_player');\n\n        // Parse M3U8 for quality variants\n        const variants = await parseM3u8Variants(m3u8);\n        setQualityVariants(variants);\n        setSelectedQuality(variants.length > 0 ? variants[0].name : 'auto');\n        stream = {\n          url: m3u8,\n          provider: source.provider\n        };\n      } else {\n        // Fallback to embed URL\n        if (type === 'movie') {\n          stream = {\n            url: vidsrcCcApi.getMovieStreamFromDomain(tmdbId, imdbId, domain),\n            provider: source.provider\n          };\n        } else {\n          stream = {\n            url: vidsrcCcApi.getTvStreamFromDomain(tmdbId, imdbId, 1, 1, domain),\n            provider: source.provider\n          };\n        }\n      }\n      setStreamData(stream);\n      setLoadingPhase('ready');\n      console.log(`✅ [Player] Stream loaded successfully: ${stream.url}`);\n    } catch (err) {\n      console.error('Error loading stream:', err);\n      await handleStreamError(err);\n    }\n  };\n  const handleStreamError = async error => {\n    console.error('Stream loading error:', error);\n\n    // For single domain setup, just show a simple error message\n    setError(`Unable to load stream: ${error.message || 'Unknown error occurred'}. Please try again later.`);\n  };\n  const handlePlayPause = () => {\n    didUserInteractRef.current = true;\n    if (playerRef.current) {\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const handleMuteToggle = () => {\n    setIsMuted(!isMuted);\n  };\n  const handleMouseMove = () => {\n    setShowControls(true);\n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n    const timeout = setTimeout(() => {\n      setShowControls(false);\n    }, 3000);\n    controlsTimeoutRef.current = timeout;\n  };\n  const handleFullscreen = () => {\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n    } else {\n      document.documentElement.requestFullscreen();\n    }\n  };\n\n  // Manual source change\n  const handleSourceChange = idx => {\n    setShowSourceSelector(false);\n    if (idx === sourceIndex) return;\n    didUserInteractRef.current = true;\n    if (autoRotateTimerRef.current) {\n      clearTimeout(autoRotateTimerRef.current);\n      autoRotateTimerRef.current = null;\n    }\n    setSourceIndex(idx);\n    rotationAttemptsRef.current = 0;\n    setTimeout(() => loadStream(sources[idx]), 0);\n  };\n\n  // Enhanced quality selection\n  const handleQualityChange = async newQuality => {\n    setSelectedQuality(newQuality);\n    setShowQualitySelector(false);\n\n    // Reload stream with new quality if M3U8 available\n    if (m3u8Url) {\n      const variant = qualityVariants.find(v => v.name === newQuality);\n      if (variant) {\n        setM3u8Url(variant.url);\n      }\n    }\n  };\n\n  // Retry stream loading\n  const handleRetry = () => {\n    didUserInteractRef.current = true;\n    if (autoRotateTimerRef.current) {\n      clearTimeout(autoRotateTimerRef.current);\n      autoRotateTimerRef.current = null;\n    }\n    setError(null);\n    setRetryCount(0);\n    loadStream();\n  };\n\n  // Enhanced iframe load handler with video detection\n  const handleIframeLoad = () => {\n    setIframeLoaded(true);\n    setIframeError(false);\n    console.log('Video iframe loaded successfully');\n\n    // Mark as ready so overlay doesn't block the embedded player's UI\n    setVideoReady(true);\n    setVideoError(null);\n\n    // Save working source preference\n    try {\n      const current = sources[sourceIndex];\n      if (current) {\n        const host = new URL(current.domain).host;\n        localStorage.setItem('preferredSourceHost', host);\n        localStorage.setItem('preferredSourceProvider', current.provider);\n      }\n    } catch {}\n\n    // Optionally still perform a delayed content check (non-blocking)\n    setTimeout(() => checkVideoContent(), 2000);\n  };\n\n  // Iframe error handler\n  const handleIframeError = () => {\n    setIframeLoaded(false);\n    setIframeError(true);\n    setVideoReady(false);\n    console.error('Video iframe failed to load');\n\n    // Rotate to next source on error and attempt reload\n    const nextIdx = (sourceIndex + 1) % sources.length;\n    setSourceIndex(nextIdx);\n    setTimeout(() => {\n      loadStream(sources[nextIdx]);\n    }, 500);\n  };\n\n  // Enhanced video content detection\n  const checkVideoContent = useCallback(async () => {\n    if (!iframeRef.current) return;\n    try {\n      const iframe = iframeRef.current;\n\n      // Wait for iframe to be fully loaded\n      if (iframe.contentDocument && iframe.contentDocument.readyState === 'complete') {\n        const videoElement = iframe.contentDocument.querySelector('video');\n        const playerContainer = iframe.contentDocument.querySelector('.player-container, #player, [data-player]');\n        if (videoElement || playerContainer) {\n          console.log('✅ Video content detected in iframe');\n          setVideoReady(true);\n          setVideoError(null);\n          return;\n        }\n\n        // Check for vidsrc.net specific elements\n        const vidsrcElements = iframe.contentDocument.querySelectorAll('[src*=\"vidsrc\"], [data-src*=\"vidsrc\"]');\n        if (vidsrcElements.length > 0) {\n          console.log('✅ VidSrc elements detected');\n          setVideoReady(true);\n          setVideoError(null);\n          return;\n        }\n\n        // Check if iframe has loaded successfully but video isn't ready yet\n        if (iframe.contentDocument.body && iframe.contentDocument.body.innerHTML.trim()) {\n          console.log('⏳ Iframe loaded but video not ready yet, waiting...');\n          // Wait a bit more for video to initialize\n          setTimeout(() => checkVideoContent(), 2000);\n          return;\n        }\n      }\n\n      // Cross-origin or delayed readiness: allow interactions after a short delay\n      setTimeout(() => {\n        setVideoReady(true);\n        setVideoError(null);\n      }, 1500);\n    } catch (error) {\n      console.warn('Cannot access iframe content (cross-origin):', error.message);\n      // For cross-origin iframes, we rely on load events and timing\n      setTimeout(() => {\n        setVideoReady(true);\n        setVideoError(null);\n      }, 3000);\n    }\n  }, []);\n\n  // Retry mechanism with exponential backoff\n  const retryWithBackoff = useCallback(async (attempt = 1, maxAttempts = 3) => {\n    if (attempt > maxAttempts) {\n      setVideoError('Video failed to load after multiple attempts');\n      setIsRetrying(false);\n      return;\n    }\n    setIsRetrying(true);\n    setVideoError(null);\n    setRetryAttempts(attempt);\n    const delay = Math.min(1000 * Math.pow(2, attempt - 1), 10000); // Exponential backoff, max 10s\n\n    console.log(`🔄 Retrying video load (attempt ${attempt}/${maxAttempts}) in ${delay}ms`);\n    setTimeout(() => {\n      // Rotate source on each retry attempt\n      setSourceIndex(prev => {\n        const next = (prev + 1) % sources.length;\n        return next;\n      });\n\n      // Load stream again with new source; on final attempt try IMDb ID fallback (movies only)\n      setTimeout(async () => {\n        try {\n          if (type === 'movie' && attempt === maxAttempts) {\n            const nextSource = sources[(sourceIndex + 1) % sources.length];\n            const ids = await moviesApi.getExternalIds(id);\n            if (ids !== null && ids !== void 0 && ids.imdb_id) {\n              if (nextSource.provider === 'vidsrc') {\n                const alt = vidsrcApi.getMovieStreamByImdbFromDomain(nextSource.domain, ids.imdb_id, {\n                  quality,\n                  autoplay: true,\n                  muted: true\n                });\n                setStreamData(alt);\n                console.log(`🔄 Using IMDb fallback via ${nextSource.domain} (vidsrc): ${alt.url}`);\n              } else {\n                const alt = twoEmbedApi.getMovieStreamByImdbFromDomain(nextSource.domain, ids.imdb_id, {\n                  autoplay: true,\n                  muted: true\n                });\n                setStreamData(alt);\n                console.log(`🔄 Using IMDb fallback via ${nextSource.domain} (2embed): ${alt.url}`);\n              }\n            } else {\n              loadStream();\n            }\n          } else {\n            loadStream();\n          }\n        } catch (e) {\n          console.warn('Retry fallback error:', e);\n          loadStream();\n        }\n        setTimeout(() => {\n          checkVideoContent();\n          setIsRetrying(false);\n        }, 2000);\n      }, 50);\n    }, delay);\n  }, [checkVideoContent, sources, sourceIndex, type, id, quality]);\n\n  // Performance monitoring removed - simplified player\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-text\",\n            children: [loadingPhase === 'initializing' && 'Initializing player...', loadingPhase === 'fetching_metadata' && 'Loading content details...', loadingPhase === 'loading_stream' && 'Finding best streaming source...', loadingPhase === 'finding_best_source' && 'Finding best streaming source...', loadingPhase.startsWith('testing_') && `Testing ${loadingPhase.replace('testing_', '').toUpperCase()}...`, loadingPhase === 'testing_alternative' && 'Trying alternative sources...', loadingPhase === 'preparing_player' && 'Setting up player...', loadingPhase === 'ready' && 'Ready to play!']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-fill\",\n              style: {\n                width: loadingPhase === 'initializing' ? '10%' : loadingPhase === 'fetching_metadata' ? '30%' : loadingPhase === 'loading_stream' ? '50%' : loadingPhase === 'finding_best_source' ? '75%' : loadingPhase === 'preparing_player' ? '90%' : '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: /*#__PURE__*/_jsxDEV(FiAlertTriangle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unable to Load Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRetry,\n            className: \"retry-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FiRotateCcw, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), \"Try Again\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"back-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), \"Back to Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this);\n  }\n  if (!content || !streamData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Content Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The requested content could not be found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"back-btn\",\n          children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), \"Back to Home\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    onMouseMove: handleMouseMove,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `player-header ${showControls ? 'visible' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => navigate(-1),\n          \"aria-label\": \"Go back\",\n          children: /*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"content-title\",\n            children: content.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), content.releaseDate && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content-year\",\n            children: new Date(content.releaseDate).getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quality-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quality-btn\",\n            onClick: () => setShowQualitySelector(!showQualitySelector),\n            \"aria-label\": \"Quality settings\",\n            children: selectedQuality.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), showQualitySelector && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-dropdown\",\n            children: qualityVariants.map(v => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `quality-option ${selectedQuality === v.name ? 'active' : ''}`,\n              onClick: () => handleQualityChange(v.name),\n              children: [v.name, selectedQuality === v.name && /*#__PURE__*/_jsxDEV(FiCheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 52\n              }, this)]\n            }, v.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quality-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quality-btn\",\n            onClick: () => setShowSourceSelector(!showSourceSelector),\n            \"aria-label\": \"Source settings\",\n            children: `SRC: ${(() => {\n              try {\n                return new URL(sources[sourceIndex].domain).host;\n              } catch {\n                return 'unknown';\n              }\n            })()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), showSourceSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-dropdown\",\n            children: sources.map((s, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `quality-option ${sourceIndex === idx ? 'active' : ''}`,\n              onClick: () => handleSourceChange(idx),\n              children: [`${s.provider}: ${s.domain}`, sourceIndex === idx && /*#__PURE__*/_jsxDEV(FiCheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 45\n              }, this)]\n            }, `${s.provider}-${s.domain}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          \"aria-label\": \"Open source in new tab\",\n          onClick: () => {\n            try {\n              if (streamData !== null && streamData !== void 0 && streamData.url) window.open(streamData.url, '_blank', 'noopener');\n            } catch (e) {\n              console.warn('Popout failed', e);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(FiExternalLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          \"aria-label\": \"Settings\",\n          children: /*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        ref: player => playerRef.current = player,\n        url: m3u8Url || streamData.url,\n        playing: isPlaying,\n        muted: isMuted,\n        volume: 1,\n        width: \"100%\",\n        height: \"100%\",\n        controls: true,\n        config: {\n          file: {\n            hlsOptions: {\n              enableWorker: false\n            }\n          }\n        },\n        onReady: () => {\n          setVideoReady(true);\n          setVideoError(null);\n        },\n        onError: error => {\n          console.error('Player error:', error);\n          setVideoError('Video failed to load');\n        },\n        onEnded: () => {\n          // Handle ended if needed\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), !videoReady && !videoError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Preparing Video...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Video content is loading, please wait\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `video-controls ${showControls ? 'visible' : 'hidden'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn play-pause\",\n            onClick: handlePlayPause,\n            \"aria-label\": isPlaying ? 'Pause' : 'Play',\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(FiPause, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn\",\n              onClick: handleMuteToggle,\n              \"aria-label\": isMuted ? 'Unmute' : 'Mute',\n              children: isMuted ? /*#__PURE__*/_jsxDEV(FiVolumeX, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 28\n              }, this) : /*#__PURE__*/_jsxDEV(FiVolume2, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-right\",\n            children: [videoReady && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stream-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot good\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-text\",\n                children: \"READY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), videoError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stream-status error\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-text\",\n                children: \"VIDEO ERROR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn retry\",\n              onClick: () => loadStream(),\n              \"aria-label\": \"Retry video load\",\n              children: /*#__PURE__*/_jsxDEV(FiRotateCcw, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn fullscreen\",\n              onClick: handleFullscreen,\n              \"aria-label\": \"Toggle fullscreen\",\n              children: /*#__PURE__*/_jsxDEV(FiMaximize, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(content.posterPath),\n          alt: content.title,\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: content.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-meta\",\n          children: [content.voteAverage > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rating-star\",\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: content.voteAverage.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), content.releaseDate && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"panel-year\",\n            children: new Date(content.releaseDate).getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this), content.runtime && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"panel-runtime\",\n            children: [content.runtime, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this), content.overview && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"panel-description\",\n          children: content.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-actions\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${type}/${id}`,\n            className: \"more-info-btn\",\n            children: \"More Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 16\n            }, this), \" This app aggregates public links; users assume responsibility for content access. Not liable for copyright infringement. Legal risks include fines up to \\u20B92 lakh under Copyright Act.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"sdlJyfC8P3bPIE9qEbMzpXrwWsg=\", false, function () {\n  return [useParams, useNavigate, useSettings];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useParams","Link","useNavigate","FiArrowLeft","FiPlay","FiPause","FiVolume2","FiVolumeX","FiMaximize","FiSettings","FiRotateCcw","FiAlertTriangle","FiCheckCircle","FiLoader","FiExternalLink","ReactPlayer","Parser","M3U8Parser","moviesApi","tvApi","vidsrcCcApi","godrivePlayerApi","embedSuApi","useSettings","getImageUrl","jsxDEV","_jsxDEV","Player","_s","type","id","navigate","settings","iframeRef","playerRef","controlsTimeoutRef","content","setContent","loading","setLoading","loadingPhase","setLoadingPhase","error","setError","streamData","setStreamData","isPlaying","setIsPlaying","isMuted","setIsMuted","showControls","setShowControls","quality","setQuality","m3u8Url","setM3u8Url","qualityVariants","setQualityVariants","selectedQuality","setSelectedQuality","showQualitySelector","setShowQualitySelector","showSourceSelector","setShowSourceSelector","retryCount","setRetryCount","isMobile","setIsMobile","iframeLoaded","setIframeLoaded","iframeError","setIframeError","videoReady","setVideoReady","videoError","setVideoError","retryAttempts","setRetryAttempts","isRetrying","setIsRetrying","sources","vidsrcCc","domains","map","d","provider","domain","godrivePlayer","embedSu","sourceIndex","setSourceIndex","rotationAttemptsRef","didUserInteractRef","autoRotateTimerRef","prefProvider","localStorage","getItem","prefHost","idx","findIndex","s","URL","host","loadContent","detectMobileDevice","current","clearTimeout","loadStream","t","setTimeout","length","nextIdx","mobile","test","navigator","userAgent","window","innerWidth","parseM3u8Variants","response","fetch","manifest","text","parser","push","end","parsedManifest","variants","playlists","playlist","name","attributes","RESOLUTION","width","height","url","uri","resolution","bandwidth","BANDWIDTH","sort","a","b","console","log","overrideSource","stream","source","tmdbId","imdbId","ids","getExternalIds","imdb_id","m3u8","getM3u8Url","getMovieStreamFromDomain","getTvStreamFromDomain","err","handleStreamError","message","handlePlayPause","handleMuteToggle","handleMouseMove","timeout","handleFullscreen","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","handleSourceChange","handleQualityChange","newQuality","variant","find","v","handleRetry","handleIframeLoad","setItem","checkVideoContent","handleIframeError","iframe","contentDocument","readyState","videoElement","querySelector","playerContainer","vidsrcElements","querySelectorAll","body","innerHTML","trim","warn","retryWithBackoff","attempt","maxAttempts","delay","Math","min","pow","prev","next","nextSource","alt","vidsrcApi","getMovieStreamByImdbFromDomain","autoplay","muted","twoEmbedApi","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","replace","toUpperCase","style","onClick","to","onMouseMove","title","releaseDate","Date","getFullYear","open","ref","player","playing","volume","controls","config","file","hlsOptions","enableWorker","onReady","onError","onEnded","src","posterPath","voteAverage","toFixed","runtime","overview","_c","$RefreshReg$"],"sources":["C:/Users/VASU/Desktop/task/src/components/Player/Player.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { FiArrowLeft, FiPlay, FiPause, FiVolume2, FiVolumeX, FiMaximize, FiSettings, FiRotateCcw, FiAlertTriangle, FiCheckCircle, FiLoader, FiExternalLink } from 'react-icons/fi';\nimport ReactPlayer from 'react-player';\nimport { Parser as M3U8Parser } from 'm3u8-parser';\nimport { moviesApi, tvApi } from '../../services/tmdbApi';\nimport { vidsrcCcApi } from '../../services/vidsrcCcApi';\nimport { godrivePlayerApi } from '../../services/godrivePlayerApi';\nimport { embedSuApi } from '../../services/embedSuApi';\nimport { useSettings } from '../../context/SettingsContext';\nimport { getImageUrl } from '../../services/tmdbApi';\nimport './Player.css';\n\nconst Player = () => {\n  const { type, id } = useParams();\n  const navigate = useNavigate();\n  const { settings } = useSettings();\n  const iframeRef = useRef(null);\n  const playerRef = useRef(null);\n  const controlsTimeoutRef = useRef(null);\n\n  // Enhanced state management\n  const [content, setContent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingPhase, setLoadingPhase] = useState('initializing');\n  const [error, setError] = useState(null);\n  const [streamData, setStreamData] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [showControls, setShowControls] = useState(true);\n  const [quality, setQuality] = useState('auto');\n  const [m3u8Url, setM3u8Url] = useState(null);\n  const [qualityVariants, setQualityVariants] = useState([]);\n  const [selectedQuality, setSelectedQuality] = useState('auto');\n  const [showQualitySelector, setShowQualitySelector] = useState(false);\n  const [showSourceSelector, setShowSourceSelector] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n  const [iframeLoaded, setIframeLoaded] = useState(false);\n  const [iframeError, setIframeError] = useState(false);\n  const [videoReady, setVideoReady] = useState(false);\n  const [videoError, setVideoError] = useState(null);\n  const [retryAttempts, setRetryAttempts] = useState(0);\n  const [isRetrying, setIsRetrying] = useState(false);\n  const sources = useMemo(() => {\n    const vidsrcCc = vidsrcCcApi.domains.map((d) => ({ provider: 'vidsrcCc', domain: d }));\n    const godrivePlayer = godrivePlayerApi.domains.map((d) => ({ provider: 'godrivePlayer', domain: d }));\n    const embedSu = embedSuApi.domains.map((d) => ({ provider: 'embedSu', domain: d }));\n    return [...vidsrcCc, ...godrivePlayer, ...embedSu];\n  }, []);\n  const [sourceIndex, setSourceIndex] = useState(0);\n  const rotationAttemptsRef = useRef(0);\n  const didUserInteractRef = useRef(false);\n  const autoRotateTimerRef = useRef(null);\n\n  // Load preferred source from previous sessions\n  useEffect(() => {\n    try {\n      const prefProvider = localStorage.getItem('preferredSourceProvider');\n      const prefHost = localStorage.getItem('preferredSourceHost');\n      if (prefHost) {\n        const idx = sources.findIndex((s) => {\n          try { return new URL(s.domain).host === prefHost && (!prefProvider || s.provider === prefProvider); }\n          catch { return false; }\n        });\n        if (idx >= 0) setSourceIndex(idx);\n      }\n    } catch {}\n  }, [sources]);\n\n  useEffect(() => {\n    loadContent();\n    detectMobileDevice();\n\n    return () => {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    };\n  }, [type, id]);\n\n  useEffect(() => {\n    if (content) {\n      loadStream();\n    }\n  }, [content]);\n\n  // Heuristic: auto-rotate only if the initial source appears unavailable (not ready or errored)\n  useEffect(() => {\n    if (!streamData) return;\n    if (videoReady && !videoError) return; // do not rotate when things look fine\n    if (autoRotateTimerRef.current) {\n      clearTimeout(autoRotateTimerRef.current);\n    }\n    const t = setTimeout(() => {\n      if (!didUserInteractRef.current) {\n        rotationAttemptsRef.current += 1;\n        if (rotationAttemptsRef.current <= sources.length - 1) {\n          const nextIdx = (sourceIndex + 1) % sources.length;\n          setSourceIndex(nextIdx);\n          setTimeout(() => loadStream(sources[nextIdx]), 0);\n        }\n      }\n    }, 5000);\n    autoRotateTimerRef.current = t;\n    return () => {\n      if (autoRotateTimerRef.current) {\n        clearTimeout(autoRotateTimerRef.current);\n        autoRotateTimerRef.current = null;\n      }\n    };\n  }, [streamData, sourceIndex, sources]);\n\n  // Detect mobile device\n  const detectMobileDevice = () => {\n    const mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n                   window.innerWidth <= 768;\n    setIsMobile(mobile);\n  };\n\n  const parseM3u8Variants = async (m3u8Url) => {\n    try {\n      const response = await fetch(m3u8Url);\n      const manifest = await response.text();\n      const parser = new M3U8Parser();\n      parser.push(manifest);\n      parser.end();\n      const parsedManifest = parser.manifest;\n\n      const variants = parsedManifest.playlists.map((playlist) => ({\n        name: `${playlist.attributes.RESOLUTION.width}x${playlist.attributes.RESOLUTION.height}`,\n        url: playlist.uri,\n        resolution: playlist.attributes.RESOLUTION,\n        bandwidth: playlist.attributes.BANDWIDTH,\n      })).sort((a, b) => b.bandwidth - a.bandwidth);\n\n      console.log('Parsed M3U8 variants:', variants);\n      return variants;\n    } catch (error) {\n      console.error('Error parsing M3U8:', error);\n      return [];\n    }\n  };\n\n  const loadStream = async (overrideSource) => {\n    try {\n      setLoadingPhase('loading_stream');\n      setError(null);\n\n      let stream;\n      const source = overrideSource || sources[sourceIndex];\n      const domain = source.domain;\n\n      // Fetch IMDB/TMDB IDs if needed\n      let tmdbId = id;\n      let imdbId = null;\n      if (type === 'movie') {\n        const ids = await moviesApi.getExternalIds(id);\n        imdbId = ids?.imdb_id || null;\n      } else {\n        const ids = await tvApi.getExternalIds(id);\n        imdbId = ids?.imdb_id || null;\n      }\n\n      // Fetch M3U8 URL for quality selection\n      let m3u8 = null;\n      if (source.provider === 'vidsrcCc') {\n        m3u8 = await vidsrcCcApi.getM3u8Url(imdbId, type === 'tv' ? 1 : null, type === 'tv' ? 1 : null);\n      } else if (source.provider === 'godrivePlayer') {\n        m3u8 = await godrivePlayerApi.getM3u8Url(imdbId, type === 'tv' ? 1 : null, type === 'tv' ? 1 : null);\n      } else {\n        m3u8 = await embedSuApi.getM3u8Url(tmdbId, imdbId, type === 'tv' ? 1 : null, type === 'tv' ? 1 : null);\n      }\n\n      if (m3u8) {\n        setM3u8Url(m3u8);\n        setLoadingPhase('preparing_player');\n\n        // Parse M3U8 for quality variants\n        const variants = await parseM3u8Variants(m3u8);\n        setQualityVariants(variants);\n        setSelectedQuality(variants.length > 0 ? variants[0].name : 'auto');\n\n        stream = { url: m3u8, provider: source.provider };\n      } else {\n        // Fallback to embed URL\n        if (type === 'movie') {\n          stream = { url: vidsrcCcApi.getMovieStreamFromDomain(tmdbId, imdbId, domain), provider: source.provider };\n        } else {\n          stream = { url: vidsrcCcApi.getTvStreamFromDomain(tmdbId, imdbId, 1, 1, domain), provider: source.provider };\n        }\n      }\n\n      setStreamData(stream);\n      setLoadingPhase('ready');\n      console.log(`✅ [Player] Stream loaded successfully: ${stream.url}`);\n    } catch (err) {\n      console.error('Error loading stream:', err);\n      await handleStreamError(err);\n    }\n  };\n\n  const handleStreamError = async (error) => {\n    console.error('Stream loading error:', error);\n\n    // For single domain setup, just show a simple error message\n    setError(`Unable to load stream: ${error.message || 'Unknown error occurred'}. Please try again later.`);\n  };\n\n  const handlePlayPause = () => {\n    didUserInteractRef.current = true;\n    if (playerRef.current) {\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handleMuteToggle = () => {\n    setIsMuted(!isMuted);\n  };\n\n  const handleMouseMove = () => {\n    setShowControls(true);\n\n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n\n    const timeout = setTimeout(() => {\n      setShowControls(false);\n    }, 3000);\n\n    controlsTimeoutRef.current = timeout;\n  };\n\n  const handleFullscreen = () => {\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n    } else {\n      document.documentElement.requestFullscreen();\n    }\n  };\n\n  // Manual source change\n  const handleSourceChange = (idx) => {\n    setShowSourceSelector(false);\n    if (idx === sourceIndex) return;\n    didUserInteractRef.current = true;\n    if (autoRotateTimerRef.current) {\n      clearTimeout(autoRotateTimerRef.current);\n      autoRotateTimerRef.current = null;\n    }\n    setSourceIndex(idx);\n    rotationAttemptsRef.current = 0;\n    setTimeout(() => loadStream(sources[idx]), 0);\n  };\n\n  // Enhanced quality selection\n  const handleQualityChange = async (newQuality) => {\n    setSelectedQuality(newQuality);\n    setShowQualitySelector(false);\n\n    // Reload stream with new quality if M3U8 available\n    if (m3u8Url) {\n      const variant = qualityVariants.find((v) => v.name === newQuality);\n      if (variant) {\n        setM3u8Url(variant.url);\n      }\n    }\n  };\n\n  // Retry stream loading\n  const handleRetry = () => {\n    didUserInteractRef.current = true;\n    if (autoRotateTimerRef.current) {\n      clearTimeout(autoRotateTimerRef.current);\n      autoRotateTimerRef.current = null;\n    }\n    setError(null);\n    setRetryCount(0);\n    loadStream();\n  };\n\n  // Enhanced iframe load handler with video detection\n  const handleIframeLoad = () => {\n    setIframeLoaded(true);\n    setIframeError(false);\n    console.log('Video iframe loaded successfully');\n\n    // Mark as ready so overlay doesn't block the embedded player's UI\n    setVideoReady(true);\n    setVideoError(null);\n\n    // Save working source preference\n    try {\n      const current = sources[sourceIndex];\n      if (current) {\n        const host = new URL(current.domain).host;\n        localStorage.setItem('preferredSourceHost', host);\n        localStorage.setItem('preferredSourceProvider', current.provider);\n      }\n    } catch {}\n\n    // Optionally still perform a delayed content check (non-blocking)\n    setTimeout(() => checkVideoContent(), 2000);\n  };\n\n  // Iframe error handler\n  const handleIframeError = () => {\n    setIframeLoaded(false);\n    setIframeError(true);\n    setVideoReady(false);\n    console.error('Video iframe failed to load');\n\n    // Rotate to next source on error and attempt reload\n    const nextIdx = (sourceIndex + 1) % sources.length;\n    setSourceIndex(nextIdx);\n    setTimeout(() => {\n      loadStream(sources[nextIdx]);\n    }, 500);\n  };\n\n  // Enhanced video content detection\n  const checkVideoContent = useCallback(async () => {\n    if (!iframeRef.current) return;\n\n    try {\n      const iframe = iframeRef.current;\n\n      // Wait for iframe to be fully loaded\n      if (iframe.contentDocument && iframe.contentDocument.readyState === 'complete') {\n        const videoElement = iframe.contentDocument.querySelector('video');\n        const playerContainer = iframe.contentDocument.querySelector('.player-container, #player, [data-player]');\n\n        if (videoElement || playerContainer) {\n          console.log('✅ Video content detected in iframe');\n          setVideoReady(true);\n          setVideoError(null);\n          return;\n        }\n\n        // Check for vidsrc.net specific elements\n        const vidsrcElements = iframe.contentDocument.querySelectorAll('[src*=\"vidsrc\"], [data-src*=\"vidsrc\"]');\n        if (vidsrcElements.length > 0) {\n          console.log('✅ VidSrc elements detected');\n          setVideoReady(true);\n          setVideoError(null);\n          return;\n        }\n\n        // Check if iframe has loaded successfully but video isn't ready yet\n        if (iframe.contentDocument.body && iframe.contentDocument.body.innerHTML.trim()) {\n          console.log('⏳ Iframe loaded but video not ready yet, waiting...');\n          // Wait a bit more for video to initialize\n          setTimeout(() => checkVideoContent(), 2000);\n          return;\n        }\n      }\n\n      // Cross-origin or delayed readiness: allow interactions after a short delay\n      setTimeout(() => {\n        setVideoReady(true);\n        setVideoError(null);\n      }, 1500);\n    } catch (error) {\n      console.warn('Cannot access iframe content (cross-origin):', error.message);\n      // For cross-origin iframes, we rely on load events and timing\n      setTimeout(() => {\n        setVideoReady(true);\n        setVideoError(null);\n      }, 3000);\n    }\n  }, []);\n\n  // Retry mechanism with exponential backoff\n  const retryWithBackoff = useCallback(async (attempt = 1, maxAttempts = 3) => {\n    if (attempt > maxAttempts) {\n      setVideoError('Video failed to load after multiple attempts');\n      setIsRetrying(false);\n      return;\n    }\n\n    setIsRetrying(true);\n    setVideoError(null);\n    setRetryAttempts(attempt);\n\n    const delay = Math.min(1000 * Math.pow(2, attempt - 1), 10000); // Exponential backoff, max 10s\n\n    console.log(`🔄 Retrying video load (attempt ${attempt}/${maxAttempts}) in ${delay}ms`);\n\n    setTimeout(() => {\n      // Rotate source on each retry attempt\n      setSourceIndex(prev => {\n        const next = (prev + 1) % sources.length;\n        return next;\n      });\n\n      // Load stream again with new source; on final attempt try IMDb ID fallback (movies only)\n      setTimeout(async () => {\n        try {\n          if (type === 'movie' && attempt === maxAttempts) {\n            const nextSource = sources[(sourceIndex + 1) % sources.length];\n            const ids = await moviesApi.getExternalIds(id);\n            if (ids?.imdb_id) {\n              if (nextSource.provider === 'vidsrc') {\n                const alt = vidsrcApi.getMovieStreamByImdbFromDomain(nextSource.domain, ids.imdb_id, { quality, autoplay: true, muted: true });\n                setStreamData(alt);\n                console.log(`🔄 Using IMDb fallback via ${nextSource.domain} (vidsrc): ${alt.url}`);\n              } else {\n                const alt = twoEmbedApi.getMovieStreamByImdbFromDomain(nextSource.domain, ids.imdb_id, { autoplay: true, muted: true });\n                setStreamData(alt);\n                console.log(`🔄 Using IMDb fallback via ${nextSource.domain} (2embed): ${alt.url}`);\n              }\n            } else {\n              loadStream();\n            }\n          } else {\n            loadStream();\n          }\n        } catch (e) {\n          console.warn('Retry fallback error:', e);\n          loadStream();\n        }\n        setTimeout(() => {\n          checkVideoContent();\n          setIsRetrying(false);\n        }, 2000);\n      }, 50);\n    }, delay);\n  }, [checkVideoContent, sources, sourceIndex, type, id, quality]);\n\n  // Performance monitoring removed - simplified player\n\n  if (loading) {\n    return (\n      <div className=\"player-loading\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <div className=\"loading-progress\">\n            <div className=\"loading-text\">\n              {loadingPhase === 'initializing' && 'Initializing player...'}\n              {loadingPhase === 'fetching_metadata' && 'Loading content details...'}\n              {loadingPhase === 'loading_stream' && 'Finding best streaming source...'}\n              {loadingPhase === 'finding_best_source' && 'Finding best streaming source...'}\n              {loadingPhase.startsWith('testing_') && `Testing ${loadingPhase.replace('testing_', '').toUpperCase()}...`}\n              {loadingPhase === 'testing_alternative' && 'Trying alternative sources...'}\n              {loadingPhase === 'preparing_player' && 'Setting up player...'}\n              {loadingPhase === 'ready' && 'Ready to play!'}\n            </div>\n            <div className=\"loading-bar\">\n              <div\n                className=\"loading-fill\"\n                style={{\n                  width: loadingPhase === 'initializing' ? '10%' :\n                         loadingPhase === 'fetching_metadata' ? '30%' :\n                         loadingPhase === 'loading_stream' ? '50%' :\n                         loadingPhase === 'finding_best_source' ? '75%' :\n                         loadingPhase === 'preparing_player' ? '90%' : '100%'\n                }}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"player-error\">\n        <div className=\"error-content\">\n          <div className=\"error-icon\">\n            <FiAlertTriangle />\n          </div>\n          <h2>Unable to Load Stream</h2>\n          <p>{error}</p>\n\n          <div className=\"error-actions\">\n            <button onClick={handleRetry} className=\"retry-btn\">\n              <FiRotateCcw />\n              Try Again\n            </button>\n            <Link to=\"/\" className=\"back-btn\">\n              <FiArrowLeft />\n              Back to Home\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!content || !streamData) {\n    return (\n      <div className=\"player-error\">\n        <div className=\"error-content\">\n          <h2>Content Not Found</h2>\n          <p>The requested content could not be found.</p>\n          <Link to=\"/\" className=\"back-btn\">\n            <FiArrowLeft />\n            Back to Home\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"player-container\" onMouseMove={handleMouseMove}>\n      {/* Player Header */}\n      <div className={`player-header ${showControls ? 'visible' : 'hidden'}`}>\n        <div className=\"header-left\">\n          <button\n            className=\"back-btn\"\n            onClick={() => navigate(-1)}\n            aria-label=\"Go back\"\n          >\n            <FiArrowLeft />\n          </button>\n          <div className=\"content-info\">\n            <h1 className=\"content-title\">{content.title}</h1>\n            {content.releaseDate && (\n              <span className=\"content-year\">\n                {new Date(content.releaseDate).getFullYear()}\n              </span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"header-right\">\n          <div className=\"quality-selector\">\n            <button\n              className=\"quality-btn\"\n              onClick={() => setShowQualitySelector(!showQualitySelector)}\n              aria-label=\"Quality settings\"\n            >\n              {selectedQuality.toUpperCase()}\n            </button>\n            {showQualitySelector && (\n              <div className=\"quality-dropdown\">\n                {qualityVariants.map((v) => (\n                  <button\n                    key={v.name}\n                    className={`quality-option ${selectedQuality === v.name ? 'active' : ''}`}\n                    onClick={() => handleQualityChange(v.name)}\n                  >\n                    {v.name}\n                    {selectedQuality === v.name && <FiCheckCircle />}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n          {/* Source selector */}\n          <div className=\"quality-selector\">\n            <button\n              className=\"quality-btn\"\n              onClick={() => setShowSourceSelector(!showSourceSelector)}\n              aria-label=\"Source settings\"\n            >\n              {`SRC: ${(() => { try { return new URL(sources[sourceIndex].domain).host; } catch { return 'unknown'; } })()}`}\n            </button>\n            {showSourceSelector && (\n              <div className=\"quality-dropdown\">\n                {sources.map((s, idx) => (\n                  <button\n                    key={`${s.provider}-${s.domain}`}\n                    className={`quality-option ${sourceIndex === idx ? 'active' : ''}`}\n                    onClick={() => handleSourceChange(idx)}\n                  >\n                    {`${s.provider}: ${s.domain}`}\n                    {sourceIndex === idx && <FiCheckCircle />}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n          {/* Popout current source */}\n          <button\n            className=\"settings-btn\"\n            aria-label=\"Open source in new tab\"\n            onClick={() => { try { if (streamData?.url) window.open(streamData.url, '_blank', 'noopener'); } catch (e) { console.warn('Popout failed', e); } }}\n          >\n            <FiExternalLink />\n          </button>\n          <button className=\"settings-btn\" aria-label=\"Settings\">\n            <FiSettings />\n          </button>\n        </div>\n      </div>\n\n      {/* Video Player */}\n      <div className=\"video-wrapper\">\n        <ReactPlayer\n          ref={(player) => (playerRef.current = player)}\n          url={m3u8Url || streamData.url}\n          playing={isPlaying}\n          muted={isMuted}\n          volume={1}\n          width=\"100%\"\n          height=\"100%\"\n          controls={true}\n          config={{\n            file: {\n              hlsOptions: {\n                enableWorker: false,\n              },\n            },\n          }}\n          onReady={() => {\n            setVideoReady(true);\n            setVideoError(null);\n          }}\n          onError={(error) => {\n            console.error('Player error:', error);\n            setVideoError('Video failed to load');\n          }}\n          onEnded={() => {\n            // Handle ended if needed\n          }}\n        />\n\n        {/* Video Loading Overlay */}\n        {!videoReady && !videoError && (\n          <div className=\"video-loading-overlay\">\n            <div className=\"loading-content\">\n              <div className=\"loading-spinner\"></div>\n              <div className=\"loading-text\">\n                <h3>Preparing Video...</h3>\n                <p>Video content is loading, please wait</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Video Controls Overlay */}\n        <div className={`video-controls ${showControls ? 'visible' : 'hidden'}`}>\n          <div className=\"controls-center\">\n            <button\n              className=\"control-btn play-pause\"\n              onClick={handlePlayPause}\n              aria-label={isPlaying ? 'Pause' : 'Play'}\n            >\n              {isPlaying ? <FiPause /> : <FiPlay />}\n            </button>\n          </div>\n\n          <div className=\"controls-bottom\">\n            <div className=\"controls-left\">\n              <button\n                className=\"control-btn\"\n                onClick={handleMuteToggle}\n                aria-label={isMuted ? 'Unmute' : 'Mute'}\n              >\n                {isMuted ? <FiVolumeX /> : <FiVolume2 />}\n              </button>\n            </div>\n\n            <div className=\"controls-right\">\n              {videoReady && (\n                <div className=\"stream-status\">\n                  <span className=\"status-dot good\"></span>\n                  <span className=\"status-text\">READY</span>\n                </div>\n              )}\n              {videoError && (\n                <div className=\"stream-status error\">\n                  <span className=\"status-dot error\"></span>\n                  <span className=\"status-text\">VIDEO ERROR</span>\n                </div>\n              )}\n              <button\n                className=\"control-btn retry\"\n                onClick={() => loadStream()}\n                aria-label=\"Retry video load\"\n              >\n                <FiRotateCcw />\n              </button>\n              <button\n                className=\"control-btn fullscreen\"\n                onClick={handleFullscreen}\n                aria-label=\"Toggle fullscreen\"\n              >\n                <FiMaximize />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content Info Panel */}\n      <div className=\"content-panel\">\n        <div className=\"panel-poster\">\n          <img\n            src={getImageUrl(content.posterPath)}\n            alt={content.title}\n            loading=\"lazy\"\n          />\n        </div>\n\n        <div className=\"panel-info\">\n          <h2 className=\"panel-title\">{content.title}</h2>\n\n          <div className=\"panel-meta\">\n            {content.voteAverage > 0 && (\n              <div className=\"panel-rating\">\n                <span className=\"rating-star\">⭐</span>\n                <span>{content.voteAverage.toFixed(1)}</span>\n              </div>\n            )}\n            {content.releaseDate && (\n              <span className=\"panel-year\">\n                {new Date(content.releaseDate).getFullYear()}\n              </span>\n            )}\n            {content.runtime && (\n              <span className=\"panel-runtime\">\n                {content.runtime} min\n              </span>\n            )}\n          </div>\n\n          {content.overview && (\n            <p className=\"panel-description\">\n              {content.overview}\n            </p>\n          )}\n\n          <div className=\"panel-actions\">\n            <Link\n              to={`/${type}/${id}`}\n              className=\"more-info-btn\"\n            >\n              More Information\n            </Link>\n          </div>\n\n          {/* Disclaimer */}\n          <div className=\"disclaimer\">\n            <p><strong>Note:</strong> This app aggregates public links; users assume responsibility for content access. Not liable for copyright infringement. Legal risks include fines up to ₹2 lakh under Copyright Act.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}